play.crypto.secret="mth/XmmIu6x7RVw[CA@0q37js9CYWuV]UGXWQ[1mppcX<;[SgVNUn8xv2^w6:rxO"
play.i18n.langs = [ "zh-tw" ]
play.http.parser.maxDiskBuffer=100MB
parsers.anyContent.maxLength=100MB
play.http.parser.maxMemoryBuffer=512K

## Filter Configuration
play.filters {
	# CSRFFilter, AllowedHostFilters, and SecurityHeadersFilters are enabled by default.
	enabled += play.filters.cors.CORSFilter

	disabled += play.filters.csrf.CSRFFilter

	## CORS filter configuration
	cors {
		# Filter paths by a whitelist of path prefixes
		#pathPrefixes = ["/some/path", ...]

		# The allowed origins. If null, all origins are allowed.
		#allowedOrigins = ["http://www.example.com"]

		# The allowed HTTP methods. If null, all methods are allowed
		#allowedHttpMethods = ["GET", "POST"]
	}

	## CSRF Filter
	csrf {
		#cookie.secure = true
		#errorHandler = MyCSRFErrorHandler
	}

	headers {
		# The X-Frame-Options header. If null, the header is not set.
		#frameOptions = "DENY"

		# The X-XSS-Protection header. If null, the header is not set.
		#xssProtection = "1; mode=block"

		# The X-Content-Type-Options header. If null, the header is not set.
		#contentTypeOptions = "nosniff"

		# The X-Permitted-Cross-Domain-Policies header. If null, the header is not set.
		#permittedCrossDomainPolicies = "master-only"

		# The Content-Security-Policy header. If null, the header is not set.
		contentSecurityPolicy = "default-src 'self' data:"
	}

	hosts {
		#allowed = [".example.com", "localhost:9000"]
	}
}

my.mongodb{
	url = "mongodb://localhost"
	db = "logger2"
}

storeSecondData=false
selfMonitor=true
trendShowActual=true

voc {
	reader = false
	path = "D:/VOC/"
}

spectrumReader {
	enable = false
	dir = "Z:/"
	postfix = "_spectrum"
}

server {
	enable=true
	host="192.168.100.100:9000"
	monitor="A001"
}

