# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET      /                                                                     controllers.Assets.at(path="/public/dist", file="index.html")

# Map static resources from the /public folder to the /assets URL path
GET      /static/*file                                                         controllers.Assets.versioned(path="/public/static", file: Asset)
GET      /html/*file                                                           controllers.Assets.at(path="/public/html", file)
GET      /dist/*file                                                           controllers.Assets.at(path="/public/dist", file)


GET      /logout                                                                  controllers.Login.logout
POST     /login                                                                   controllers.Login.authenticate
GET      /login                                                                   controllers.Login.isLogin

PUT      /User                                                                    controllers.HomeController.newUser
GET      /User                                                                    controllers.HomeController.getAllUsers
POST     /User/:id                                                                controllers.HomeController.updateUser(id)
DELETE   /User/:id                                                                controllers.HomeController.deleteUser(id)	

GET      /HistoryTrend/:monitorType/:reportUnit/:statusFilter/:start/:end         controllers.Query.historyTrendChart(monitorType, reportUnit, statusFilter, start:Long, end:Long, outputTypeStr="html")
GET      /HistoryTrend/excel/:monitorType/:reportUnit/:statusFilter/:start/:end   controllers.Query.historyTrendChart(monitorType, reportUnit, statusFilter, start:Long, end:Long, outputTypeStr="excel")

GET      /HistoryReport/:monitorType/:tabType/:start/:end                         controllers.Query.historyData(monitorType, tabType, start: Long, end: Long)

GET      /CalibrationReport/:start/:end                                           controllers.Query.calibrationReport(start, end)

GET      /AlarmReport/:level/:start/:end                                          controllers.Query.alarmReport(level:Int, start, end)

POST     /SaveMonitorTypeConfig                                                   controllers.HomeController.saveMonitorTypeConfig

GET      /InstrumentTypes                                                         controllers.HomeController.getInstrumentTypes
GET      /InstrumentTypeInfo                                                      controllers.HomeController.getInstrumentTypes
GET      /InstrumentTypeInfo/:id                                                  controllers.HomeController.getInstrumentType(id)


PUT      /Instrument                                                              controllers.HomeController.newInstrument
GET      /Instrument                                                              controllers.HomeController.getInstrumentList
GET      /Instrument/:id                                                          controllers.HomeController.getInstrument(id)
DELETE   /Instrument/:ids                                                         controllers.HomeController.removeInstrument(ids)
PUT      /DeactivateInstrument/:ids                                               controllers.HomeController.deactivateInstrument(ids)
PUT      /ActivateInstrument/:ids                                                 controllers.HomeController.activateInstrument(ids)
PUT      /ToggleMaintainInstrument/:ids                                           controllers.HomeController.toggleMaintainInstrument(ids)
PUT      /CalibrateInstrumentZero/:ids                                            controllers.HomeController.calibrateInstrument(ids, zeroCalibration="true")
PUT      /CalibrateInstrumentSpan/:ids                                            controllers.HomeController.calibrateInstrument(ids, zeroCalibration="false")
PUT      /CalibrateInstrument/:ids                                                controllers.HomeController.calibrateInstrumentFull(ids)
PUT      /ResetInstrument/:ids                                                    controllers.HomeController.resetInstrument(ids)
GET      /ExecuteSeq/:ids/:seq                                                    controllers.HomeController.getExecuteSeq(ids, seq:Int)
PUT      /ExecuteSeq/:ids/:seq                                                    controllers.HomeController.executeSeq(ids, seq:Int)


GET      /InstrumentStatusReport/:id/:start/:end                                  controllers.Query.instrumentStatusReport(id, start, end)
GET      /ManualAuditHistory/:start/:end                                          controllers.Query.manualAuditHistoryReport(start:Long, end:Long)

#Data Management

GET      /Recalculate/:start/:end                                                 controllers.HomeController.recalculateHour(start, end)
GET      /Upload/:tab/:start/:end                                                 controllers.HomeController.uploadData(tab, start, end)

#Realtime
GET      /MonitorTypeStatusList                                                   controllers.Realtime.MonitorTypeStatusList()

#Report
GET      /monitorReport/:reportType/:reportDate                                   controllers.Report.getMonitorReport(reportType, reportDate, outputTypeStr="html")
GET      /PDF/monitorReport/:reportType/:reportDate                               controllers.Report.getMonitorReport(reportType, reportDate, outputTypeStr="pdf")
GET      /Excel/monitorReport/:reportType/:reportDate                             controllers.Report.getMonitorReport(reportType, reportDate, outputTypeStr="excel")

GET      /MonthlyHourReport/:monitorType/:reportDate                              controllers.Report.monthlyHourReport(monitorType, reportDate, outputTypeStr="html")


#JSON
GET      /MonitorType                                                             controllers.HomeController.monitorTypeList
POST     /MonitorType/:id                                                         controllers.HomeController.upsertMonitorType(id)
PUT      /MonitorType/:id                                                         controllers.HomeController.upsertMonitorType(id)

GET      /Record/:monitorType/:start/:end                                         controllers.Query.recordList(monitorType, start:Long, end:Long)
PUT      /Record/:monitorType                                                     controllers.Query.updateRecord(monitorType)

GET      /HourRecord/:start/:end                                                  controllers.Query.hourRecordList(start:Long, end:Long)
GET      /MinRecord/:start/:end                                                   controllers.Query.minRecordList(start:Long, end:Long)
GET      /CalibrationRecord/:start/end                                            controllers.Query.calibrationRecordList(start:Long, end:Long)
GET      /AlertRecord/:start/end                                                  controllers.Query.alertRecordList(start:Long, end:Long)
	
	
GET      /EvtOptHigh                                                              controllers.HomeController.testEvtOptHigh
#GET		/WindRose				controllers.Query.windRose
#GET		/MonitorTypeRose		controllers.Query.monitorTypeRose
#GET		/WindRoseReport/:monitor/:monitorType/:nWays/:start/:end	controllers.Query.windRoseReport(monitor, monitorType, nWays:Int, start, end)
